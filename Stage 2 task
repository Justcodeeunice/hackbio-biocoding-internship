def translate(seq):
    table = {
        'ATA':'I', 'ATC':'I', 'ATT':'I', 'ATG':'M', 
        'ACA':'T', 'ACC':'T', 'ACG':'T', 'ACT':'T', 
        'AAC':'N', 'AAT':'N', 'AAA':'K', 'AAG':'K', 
        'AGC':'S', 'AGT':'S', 'AGA':'R', 'AGG':'R',                  
        'CTA':'L', 'CTC':'L', 'CTG':'L', 'CTT':'L', 
        'CCA':'P', 'CCC':'P', 'CCG':'P', 'CCT':'P', 
        'CAC':'H', 'CAT':'H', 'CAA':'Q', 'CAG':'Q', 
        'CGA':'R', 'CGC':'R', 'CGG':'R', 'CGT':'R', 
        'GTA':'V', 'GTC':'V', 'GTG':'V', 'GTT':'V', 
        'GCA':'A', 'GCC':'A', 'GCG':'A', 'GCT':'A', 
        'GAC':'D', 'GAT':'D', 'GAA':'E', 'GAG':'E', 
        'GGA':'G', 'GGC':'G', 'GGG':'G', 'GGT':'G', 
        'TCA':'S', 'TCC':'S', 'TCG':'S', 'TCT':'S', 
        'TTC':'F', 'TTT':'F', 'TTA':'L', 'TTG':'L', 
        'TAC':'Y', 'TAT':'Y', 'TAA':'_', 'TAG':'_', 
        'TGC':'C', 'TGT':'C', 'TGA':'_', 'TGG':'W',
    }
    protein ="" # This initializes an empty string protein, which will store the translated amino acid sequence.
    if len(seq)% 3 ==0: #This checks if the DNA sequence length (seq) is a multiple of 3.
                        #DNA is translated in triplets (codons), so if the length is not a multiple of 3, translation might be incomplete.
        for i in range (0, len(seq), 3): #This loops through the sequence in steps of 3 (i.e., processes one codon at a time).
            codon = seq[i:i + 3] #Extracts a 3-letter codon from the DNA sequence.
            protein+= table.get(codon,"-*-") # "?" means codon doesnt exist, ANY CHARACTER CAN BE USED TO MAKE IT READABLE
                                             # Looks up the corresponding amino acid from the table (which is a codon-to-amino acid dictionary).
                                            # If the codon is found in table, the corresponding amino acid is added to protein.
                                            # If the codon is not found, it adds the placeholder "-*-", indicating an unknown or invalid codon.
    else:
        print("DNA sequence is not multiple of three")
    return protein
DNA_sequence= "TATXYZTACTAGXYZ" #YOU DONT necessarily need to download the code from ncbi you can write your own code.
translate(DNA_sequence)
ABC = translate(DNA_sequence)
print(ABC)



