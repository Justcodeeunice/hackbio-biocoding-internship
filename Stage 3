import pandas as pd
df=pd.read_csv('https://raw.githubusercontent.com/HackBio-Internship/2025_project_collection/refs/heads/main/Python/Dataset/diabetes.csv')
df.head()
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, mean_squared_error
from sklearn.preprocessing import StandardScaler
X = df.drop('Outcome', axis=1)
y = df['Outcome']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LogisticRegression(C=0.1, max_iter=1000, penalty='l1', solver='saga')
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
print(f'Accuracy: {accuracy}')
print(f'Mean Squared Error: {mse}')

from sklearn.model_selection import cross_val_score
best_model = LogisticRegression(max_iter=10000, solver='liblinear', penalty='l1', C=0.1)
scores = cross_val_score(best_model, X, y, cv=5, scoring='accuracy')
print(f'Cross-validation accuracy: {scores.mean()}')
best_model = LogisticRegression(max_iter=10000, solver='saga', penalty='l1', C=0.1)
scores = cross_val_score(best_model, X, y, cv=5, scoring='accuracy')
print(f'Cross-validation accuracy: {scores.mean()}')
